[
{
	"uri": "/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "This is a main content\n"
},
{
	"uri": "/operations/",
	"title": "Operations",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/operations/ssh/sftp-only-account/",
	"title": "Sftp Only Account",
	"tags": [],
	"description": "",
	"content": "a link\n"
},
{
	"uri": "/programming/go/testing/stubbing-mocking-fakes/",
	"title": "Stubbing Mocking Fakes",
	"tags": [],
	"description": "",
	"content": "  stubbing and such  Example of Creating a Simple Mock  example  "
},
{
	"uri": "/programming/go/testing/",
	"title": "Testing",
	"tags": [],
	"description": "",
	"content": " Everything about Go testing\nGood Reads on Testing in Go  Go Advanced Testing Tips \u0026amp; Tricks Unfortunately, on Medium but otherwise some good advice here.  "
},
{
	"uri": "/programming/go/convert-reader-to-string/",
	"title": "Convert io.Reader to String",
	"tags": [],
	"description": "",
	"content": "Converting from an io.Reader to a string\nfunc ToString(r io.Reader) string { var buf.BytesBuffer buf.ReadFrom(r) return buf.String() } "
},
{
	"uri": "/programming/go/",
	"title": "Go",
	"tags": [],
	"description": "",
	"content": "All the stuffs related to Go\n"
},
{
	"uri": "/programming/go/testing/automatic-test-generation/",
	"title": "Automatic Test Generation",
	"tags": [],
	"description": "",
	"content": "# geterate test skeleton for all Decrypt methods in `crypt` gotests -only \u0026#34;Decrypt*\u0026#34; crypt/ "
},
{
	"uri": "/programming/go/testing/table-driven-tests/",
	"title": "Table Driven Tests",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/programming/go/testing/test-directories/",
	"title": "Test Directories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/programming/go/modules/basic-usage/",
	"title": "Basic Usage",
	"tags": [],
	"description": "",
	"content": "go mod init go mod tidy "
},
{
	"uri": "/programming/go/modules/",
	"title": "Modules",
	"tags": [],
	"description": "",
	"content": "Everything about Go modules\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/programming/",
	"title": "Programming",
	"tags": [],
	"description": "",
	"content": "Programming directory\n"
},
{
	"uri": "/programming/go/modules/specify-version/",
	"title": "Specifying a specific version",
	"tags": [],
	"description": "",
	"content": "When using modules, it is possible to use specific package versions when compiling. I\u0026rsquo;ve found that the easiest way to do this is through go mod using tidy, vendor, and go get.\n# make sure you\u0026#39;re outside of your GOPATH and you have modules initialized go mod init github.com/thefury/sooperpackage # get the specific version needed: hash, tag, branch can all be used go get github.com/thefury/required_package@978da6523 go mod vendor # I like to do this in any case # you should see that the correct version is now used cat go.mod "
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]